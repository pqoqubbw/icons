{
  "name": "github",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "github.tsx",
      "content": "'use client';\r\n\r\nimport type { Variants } from 'motion/react';\r\nimport { motion, useAnimation } from 'motion/react';\r\nimport type { HTMLAttributes } from 'react';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport interface GithubIconHandle {\r\n  startAnimation: () => void;\r\n  stopAnimation: () => void;\r\n}\r\n\r\ninterface GithubIconProps extends HTMLAttributes<HTMLDivElement> {\r\n  size?: number;\r\n}\r\n\r\nconst bodyVariants: Variants = {\r\n  normal: {\r\n    opacity: 1,\r\n    pathLength: 1,\r\n    scale: 1,\r\n    transition: {\r\n      duration: 0.3,\r\n    },\r\n  },\r\n  animate: {\r\n    opacity: [0, 1],\r\n    pathLength: [0, 1],\r\n    scale: [0.9, 1],\r\n    transition: {\r\n      duration: 0.4,\r\n    },\r\n  },\r\n};\r\n\r\nconst tailVariants: Variants = {\r\n  normal: {\r\n    pathLength: 1,\r\n    rotate: 0,\r\n    transition: {\r\n      duration: 0.3,\r\n    },\r\n  },\r\n  draw: {\r\n    pathLength: [0, 1],\r\n    rotate: 0,\r\n    transition: {\r\n      duration: 0.5,\r\n    },\r\n  },\r\n  wag: {\r\n    pathLength: 1,\r\n    rotate: [0, -15, 15, -10, 10, -5, 5],\r\n    transition: {\r\n      duration: 2.5,\r\n      ease: 'easeInOut',\r\n      repeat: Infinity,\r\n    },\r\n  },\r\n};\r\n\r\nconst GithubIcon = forwardRef<GithubIconHandle, GithubIconProps>(\r\n  ({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n    const bodyControls = useAnimation();\r\n    const tailControls = useAnimation();\r\n    const isControlledRef = useRef(false);\r\n\r\n    useImperativeHandle(ref, () => {\r\n      isControlledRef.current = true;\r\n\r\n      return {\r\n        startAnimation: async () => {\r\n          bodyControls.start('animate');\r\n          await tailControls.start('draw');\r\n          tailControls.start('wag');\r\n        },\r\n        stopAnimation: () => {\r\n          bodyControls.start('normal');\r\n          tailControls.start('normal');\r\n        },\r\n      };\r\n    });\r\n\r\n    const handleMouseEnter = useCallback(\r\n      async (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (!isControlledRef.current) {\r\n          bodyControls.start('animate');\r\n          await tailControls.start('draw');\r\n          tailControls.start('wag');\r\n        } else {\r\n          onMouseEnter?.(e);\r\n        }\r\n      },\r\n      [bodyControls, onMouseEnter, tailControls]\r\n    );\r\n\r\n    const handleMouseLeave = useCallback(\r\n      (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (!isControlledRef.current) {\r\n          bodyControls.start('normal');\r\n          tailControls.start('normal');\r\n        } else {\r\n          onMouseLeave?.(e);\r\n        }\r\n      },\r\n      [bodyControls, tailControls, onMouseLeave]\r\n    );\r\n\r\n    return (\r\n      <div\r\n        className={cn(className)}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n        {...props}\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width={size}\r\n          height={size}\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        >\r\n          <motion.path\r\n            variants={bodyVariants}\r\n            initial=\"normal\"\r\n            animate={bodyControls}\r\n            d=\"M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4\"\r\n          />\r\n          <motion.path\r\n            variants={tailVariants}\r\n            initial=\"normal\"\r\n            animate={tailControls}\r\n            d=\"M9 18c-4.51 2-5-2-7-2\"\r\n          />\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nGithubIcon.displayName = 'GithubIcon';\r\n\r\nexport { GithubIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}