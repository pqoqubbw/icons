{
  "name": "angry",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "angry.tsx",
      "content": "'use client';\r\n\r\nimport type { Variants } from 'motion/react';\r\nimport { motion, useAnimation } from 'motion/react';\r\nimport type { HTMLAttributes } from 'react';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport interface AngryIconHandle {\r\n  startAnimation: () => void;\r\n  stopAnimation: () => void;\r\n}\r\n\r\ninterface AngryIconProps extends HTMLAttributes<HTMLDivElement> {\r\n  size?: number;\r\n}\r\n\r\nconst EYEBROW_ROTATION = 20;\r\nconst DURATION = 0.6;\r\n\r\nconst pathVariantsFace: Variants = {\r\n  normal: { scale: 1, rotate: 0 },\r\n  animate: {\r\n    scale: [1, 1.2, 1.2, 1.2, 1],\r\n    rotate: [0, -3, 3, -1, 1, 0],\r\n    transition: {\r\n      duration: DURATION,\r\n      times: [0, 0.2, 0.4, 0.6, 1],\r\n      ease: 'easeInOut',\r\n    },\r\n  },\r\n};\r\n\r\nconst pathVariantsLeftEyebrow: Variants = {\r\n  normal: { rotate: 0 },\r\n  animate: {\r\n    rotate: [0, EYEBROW_ROTATION, 0],\r\n    transition: {\r\n      duration: DURATION + 0.2,\r\n    },\r\n  },\r\n};\r\n\r\nconst pathVariantsRightEyebrow: Variants = {\r\n  normal: { rotate: 0 },\r\n  animate: {\r\n    rotate: [0, -EYEBROW_ROTATION, 0],\r\n    transition: {\r\n      duration: DURATION + 0.2,\r\n    },\r\n  },\r\n};\r\n\r\nconst pathVariantsEye: Variants = {\r\n  normal: { scale: 1 },\r\n  animate: {\r\n    scale: [1, 1.2, 1],\r\n    transition: {\r\n      duration: DURATION,\r\n    },\r\n  },\r\n};\r\n\r\nconst pathVariantsMouth: Variants = {\r\n  normal: { translateY: 0 },\r\n  animate: {\r\n    translateY: [0, -0.5, 0],\r\n    transition: {\r\n      duration: DURATION,\r\n    },\r\n  },\r\n};\r\n\r\nconst AngryIcon = forwardRef<AngryIconHandle, AngryIconProps>(\r\n  ({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n    const controls = useAnimation();\r\n    const isControlledRef = useRef(false);\r\n\r\n    useImperativeHandle(ref, () => {\r\n      isControlledRef.current = true;\r\n\r\n      return {\r\n        startAnimation: () => controls.start('animate'),\r\n        stopAnimation: () => controls.start('normal'),\r\n      };\r\n    });\r\n\r\n    const handleMouseEnter = useCallback(\r\n      (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (!isControlledRef.current) {\r\n          controls.start('animate');\r\n        } else {\r\n          onMouseEnter?.(e);\r\n        }\r\n      },\r\n      [controls, onMouseEnter]\r\n    );\r\n\r\n    const handleMouseLeave = useCallback(\r\n      (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (!isControlledRef.current) {\r\n          controls.start('normal');\r\n        } else {\r\n          onMouseLeave?.(e);\r\n        }\r\n      },\r\n      [controls, onMouseLeave]\r\n    );\r\n\r\n    return (\r\n      <div\r\n        className={cn(className)}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n        {...props}\r\n      >\r\n        <motion.svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width={size}\r\n          height={size}\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          animate={controls}\r\n          variants={pathVariantsFace}\r\n        >\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n          <motion.path\r\n            variants={pathVariantsMouth}\r\n            animate={controls}\r\n            d=\"M16 16s-1.5-2-4-2-4 2-4 2\"\r\n          />\r\n          <motion.path\r\n            variants={pathVariantsLeftEyebrow}\r\n            animate={controls}\r\n            d=\"M7.5 8 10 9\"\r\n          />\r\n          <motion.path\r\n            variants={pathVariantsRightEyebrow}\r\n            animate={controls}\r\n            d=\"m14 9 2.5-1\"\r\n          />\r\n          <motion.path\r\n            variants={pathVariantsEye}\r\n            animate={controls}\r\n            d=\"M9 10h.01\"\r\n          />\r\n          <motion.path\r\n            variants={pathVariantsEye}\r\n            animate={controls}\r\n            d=\"M15 10h.01\"\r\n          />\r\n        </motion.svg>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nAngryIcon.displayName = 'AngryIcon';\r\n\r\nexport { AngryIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}