{
  "name": "fingerprint",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "fingerprint.tsx",
      "content": "'use client';\n\nimport type { Variants } from 'motion/react';\nimport { motion, useAnimation } from 'motion/react';\nimport type { HTMLAttributes } from 'react';\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from 'react';\nimport { cn } from '@/lib/utils';\n\nexport interface FingerprintIconHandle {\n  startAnimation: () => void;\n  stopAnimation: () => void;\n}\n\ninterface FingerprintIconProps extends HTMLAttributes<HTMLDivElement> {\n  size?: number;\n}\n\nconst pathVariants: Variants = {\n  normal: { pathLength: 1, opacity: 1 },\n  animate: {\n    opacity: [0, 0, 1, 1, 1],\n    pathLength: [0.1, 0.3, 0.5, 0.7, 0.9, 1],\n    transition: {\n      opacity: { duration: 0.5 },\n      pathLength: {\n        duration: 2,\n      },\n    },\n  },\n};\n\nconst FingerprintIcon = forwardRef<FingerprintIconHandle, FingerprintIconProps>(\n  ({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\n    const controls = useAnimation();\n    const isControlledRef = useRef(false);\n\n    useImperativeHandle(ref, () => {\n      isControlledRef.current = true;\n\n      return {\n        startAnimation: () => controls.start('animate'),\n        stopAnimation: () => controls.start('normal'),\n      };\n    });\n\n    const handleMouseEnter = useCallback(\n      (e: React.MouseEvent<HTMLDivElement>) => {\n        if (!isControlledRef.current) {\n          controls.start('animate');\n        } else {\n          onMouseEnter?.(e);\n        }\n      },\n      [controls, onMouseEnter]\n    );\n\n    const handleMouseLeave = useCallback(\n      (e: React.MouseEvent<HTMLDivElement>) => {\n        if (!isControlledRef.current) {\n          controls.start('normal');\n        } else {\n          onMouseLeave?.(e);\n        }\n      },\n      [controls, onMouseLeave]\n    );\n\n    return (\n      <div\n        className={cn(className)}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        {...props}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={size}\n          height={size}\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        >\n          <path\n            d=\"M12 10a2 2 0 0 0-2 2c0 1.02-.1 2.51-.26 4\"\n            strokeOpacity={0.4}\n            strokeWidth=\"2\"\n            fill=\"none\"\n          />\n          <motion.path\n            d=\"M12 10a2 2 0 0 0-2 2c0 1.02-.1 2.51-.26 4\"\n            variants={pathVariants}\n            animate={controls}\n          />\n\n          <path\n            d=\"M14 13.12c0 2.38 0 6.38-1 8.88\"\n            strokeOpacity={0.4}\n            strokeWidth=\"2\"\n            fill=\"none\"\n          />\n          <motion.path\n            d=\"M14 13.12c0 2.38 0 6.38-1 8.88\"\n            variants={pathVariants}\n            animate={controls}\n          />\n\n          <path\n            d=\"M17.29 21.02c.12-.6.43-2.3.5-3.02\"\n            strokeOpacity={0.4}\n            strokeWidth=\"2\"\n            fill=\"none\"\n          />\n          <motion.path\n            d=\"M17.29 21.02c.12-.6.43-2.3.5-3.02\"\n            variants={pathVariants}\n            animate={controls}\n          />\n\n          <path\n            d=\"M2 12a10 10 0 0 1 18-6\"\n            strokeOpacity={0.4}\n            strokeWidth=\"2\"\n            fill=\"none\"\n          />\n          <motion.path\n            d=\"M2 12a10 10 0 0 1 18-6\"\n            variants={pathVariants}\n            animate={controls}\n          />\n\n          <path d=\"M2 16h.01\" strokeOpacity={0.4} strokeWidth=\"2\" fill=\"none\" />\n          <motion.path\n            d=\"M2 16h.01\"\n            variants={pathVariants}\n            animate={controls}\n          />\n\n          <path\n            d=\"M21.8 16c.2-2 .131-5.354 0-6\"\n            strokeOpacity={0.4}\n            strokeWidth=\"2\"\n            fill=\"none\"\n          />\n          <motion.path\n            d=\"M21.8 16c.2-2 .131-5.354 0-6\"\n            variants={pathVariants}\n            animate={controls}\n          />\n\n          <path\n            d=\"M5 19.5C5.5 18 6 15 6 12a6 6 0 0 1 .34-2\"\n            strokeOpacity={0.4}\n            strokeWidth=\"2\"\n            fill=\"none\"\n          />\n          <motion.path\n            d=\"M5 19.5C5.5 18 6 15 6 12a6 6 0 0 1 .34-2\"\n            variants={pathVariants}\n            animate={controls}\n          />\n\n          <path\n            d=\"M8.65 22c.21-.66.45-1.32.57-2\"\n            strokeOpacity={0.4}\n            strokeWidth=\"2\"\n            fill=\"none\"\n          />\n          <motion.path\n            d=\"M8.65 22c.21-.66.45-1.32.57-2\"\n            variants={pathVariants}\n            animate={controls}\n          />\n\n          <path\n            d=\"M9 6.8a6 6 0 0 1 9 5.2v2\"\n            strokeOpacity={0.4}\n            strokeWidth=\"2\"\n            fill=\"none\"\n          />\n          <motion.path\n            d=\"M9 6.8a6 6 0 0 1 9 5.2v2\"\n            variants={pathVariants}\n            animate={controls}\n          />\n        </svg>\n      </div>\n    );\n  }\n);\n\nFingerprintIcon.displayName = 'FingerprintIcon';\n\nexport { FingerprintIcon };\n",
      "type": "registry:ui"
    }
  ]
}