{
  "name": "building-2",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "building-2.tsx",
      "content": "'use client';\n\nimport { cn } from '@/lib/utils';\nimport type { Transition, Variants } from 'motion/react';\nimport { motion, useAnimation } from 'motion/react';\nimport type { HTMLAttributes } from 'react';\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from 'react';\n\nexport interface Building2IconHandle {\n  startAnimation: () => void;\n  stopAnimation: () => void;\n}\n\ninterface Building2IconProps extends HTMLAttributes<HTMLDivElement> {\n  size?: number;\n}\n\nconst defaultTransition: Transition = {\n  duration: 0.6,\n  ease: [0.25, 1, 0.5, 1],\n  opacity: { duration: 0.2 },\n};\n\nconst mainBuildingVariants: Variants = {\n  normal: {\n    y: 0,\n    opacity: 1,\n  },\n  animate: {\n    y: [20, 0],\n    opacity: [0, 1],\n  },\n};\n\nconst leftWingVariants: Variants = {\n  normal: {\n    x: 0,\n    opacity: 1,\n  },\n  animate: {\n    x: [-15, 0],\n    opacity: [0, 1],\n  },\n};\n\nconst rightWingVariants: Variants = {\n  normal: {\n    x: 0,\n    opacity: 1,\n  },\n  animate: {\n    x: [15, 0],\n    opacity: [0, 1],\n  },\n};\n\nconst windowVariants: Variants = {\n  normal: {\n    y: 0,\n    opacity: 1,\n    scale: 1,\n  },\n  animate: {\n    y: [-5, 0],\n    opacity: [0, 1],\n    scale: [0.8, 1],\n  },\n};\n\nconst buildingOutlineTransition = { ...defaultTransition, delay: 0 };\nconst leftWingTransition = { ...defaultTransition, delay: 0.15 };\nconst rightWingTransition = { ...defaultTransition, delay: 0.3 };\nconst windowsTransition = [\n  { ...defaultTransition, delay: 0.4 },\n  { ...defaultTransition, delay: 0.5 },\n  { ...defaultTransition, delay: 0.6 },\n  { ...defaultTransition, delay: 0.7 },\n];\n\nconst Building2Icon = forwardRef<Building2IconHandle, Building2IconProps>(\n  ({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\n    const controls = useAnimation();\n    const isControlledRef = useRef(false);\n\n    useImperativeHandle(ref, () => {\n      isControlledRef.current = true;\n\n      return {\n        startAnimation: () => controls.start('animate'),\n        stopAnimation: () => controls.start('normal'),\n      };\n    });\n\n    const handleMouseEnter = useCallback(\n      (e: React.MouseEvent<HTMLDivElement>) => {\n        if (!isControlledRef.current) {\n          void controls.start('animate');\n        } else {\n          onMouseEnter?.(e);\n        }\n      },\n      [controls, onMouseEnter]\n    );\n\n    const handleMouseLeave = useCallback(\n      (e: React.MouseEvent<HTMLDivElement>) => {\n        if (!isControlledRef.current) {\n          void controls.start('normal');\n        } else {\n          onMouseLeave?.(e);\n        }\n      },\n      [controls, onMouseLeave]\n    );\n\n    return (\n      <div\n        className={cn(\n          `cursor-pointer select-none p-2 hover:bg-accent rounded-md transition-colors duration-200 flex items-center justify-center`,\n          className\n        )}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        {...props}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={size}\n          height={size}\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        >\n          <motion.path\n            d=\"M6 22V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v18Z\"\n            variants={mainBuildingVariants}\n            transition={buildingOutlineTransition}\n            animate={controls}\n          />\n\n          <motion.path\n            d=\"M6 12H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2\"\n            variants={leftWingVariants}\n            transition={leftWingTransition}\n            animate={controls}\n          />\n\n          <motion.path\n            d=\"M18 9h2a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2h-2\"\n            variants={rightWingVariants}\n            transition={rightWingTransition}\n            animate={controls}\n          />\n\n          <motion.path\n            d=\"M10 6h4\"\n            variants={windowVariants}\n            transition={windowsTransition[0]}\n            animate={controls}\n          />\n\n          <motion.path\n            d=\"M10 10h4\"\n            variants={windowVariants}\n            transition={windowsTransition[1]}\n            animate={controls}\n          />\n\n          <motion.path\n            d=\"M10 14h4\"\n            variants={windowVariants}\n            transition={windowsTransition[2]}\n            animate={controls}\n          />\n\n          <motion.path\n            d=\"M10 18h4\"\n            variants={windowVariants}\n            transition={windowsTransition[3]}\n            animate={controls}\n          />\n        </svg>\n      </div>\n    );\n  }\n);\n\nBuilding2Icon.displayName = 'Building2Icon';\n\nexport { Building2Icon };\n",
      "type": "registry:ui"
    }
  ]
}