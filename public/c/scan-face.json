{
  "name": "scan-face",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "scan-face.tsx",
      "content": "'use client';\r\n\r\nimport type { Variants } from 'motion/react';\r\nimport { motion, useAnimation } from 'motion/react';\r\nimport type { HTMLAttributes } from 'react';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport interface ScanFaceIconHandle {\r\n  startAnimation: () => void;\r\n  stopAnimation: () => void;\r\n}\r\n\r\ninterface ScanFaceIconProps extends HTMLAttributes<HTMLDivElement> {\r\n  size?: number;\r\n}\r\n\r\nconst ScanFaceIcon = forwardRef<ScanFaceIconHandle, ScanFaceIconProps>(\r\n  ({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n    const controls = useAnimation();\r\n    const isControlledRef = useRef(false);\r\n\r\n    useImperativeHandle(ref, () => {\r\n      isControlledRef.current = true;\r\n      return {\r\n        startAnimation: async () => {\r\n          await controls.start('hidden');\r\n          await controls.start('visible');\r\n        },\r\n        stopAnimation: () => controls.start('visible'),\r\n      };\r\n    });\r\n\r\n    const handleMouseEnter = useCallback(\r\n      async (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (!isControlledRef.current) {\r\n          await controls.start('hidden');\r\n          await controls.start('visible');\r\n        } else {\r\n          onMouseEnter?.(e);\r\n        }\r\n      },\r\n      [controls, onMouseEnter]\r\n    );\r\n\r\n    const handleMouseLeave = useCallback(\r\n      (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (!isControlledRef.current) {\r\n          controls.start('visible');\r\n        } else {\r\n          onMouseLeave?.(e);\r\n        }\r\n      },\r\n      [controls, onMouseLeave]\r\n    );\r\n\r\n    const faceVariants: Variants = {\r\n      visible: { scale: 1 },\r\n      hidden: {\r\n        scale: 0.9,\r\n        transition: { type: 'spring', stiffness: 200, damping: 20 },\r\n      },\r\n    };\r\n\r\n    const cornerVariants: Variants = {\r\n      visible: { scale: 1, rotate: 0, opacity: 1 },\r\n      hidden: {\r\n        scale: 1.2,\r\n        rotate: 45,\r\n        opacity: 0,\r\n        transition: { type: 'spring', stiffness: 200, damping: 20 },\r\n      },\r\n    };\r\n\r\n    const mouthVariants: Variants = {\r\n      visible: { scale: 1, opacity: 1 },\r\n      hidden: {\r\n        scale: 0.8,\r\n        opacity: 0,\r\n        transition: { duration: 0.3, delay: 0.1 },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={cn(className)}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n        {...props}\r\n      >\r\n        <motion.svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width={size}\r\n          height={size}\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          animate={controls}\r\n          variants={faceVariants}\r\n        >\r\n          <motion.path\r\n            variants={cornerVariants}\r\n            animate={controls}\r\n            initial=\"visible\"\r\n            d=\"M3 7V5a2 2 0 0 1 2-2h2\"\r\n          />\r\n          <motion.path\r\n            variants={cornerVariants}\r\n            animate={controls}\r\n            initial=\"visible\"\r\n            d=\"M17 3h2a2 2 0 0 1 2 2v2\"\r\n          />\r\n          <motion.path\r\n            variants={cornerVariants}\r\n            animate={controls}\r\n            initial=\"visible\"\r\n            d=\"M21 17v2a2 2 0 0 1-2 2h-2\"\r\n          />\r\n          <motion.path\r\n            variants={cornerVariants}\r\n            animate={controls}\r\n            initial=\"visible\"\r\n            d=\"M7 21H5a2 2 0 0 1-2-2v-2\"\r\n          />\r\n          <motion.path\r\n            variants={mouthVariants}\r\n            animate={controls}\r\n            initial=\"visible\"\r\n            d=\"M8 14s1.5 2 4 2 4-2 4-2\"\r\n          />\r\n          <line x1=\"9\" x2=\"9.01\" y1=\"9\" y2=\"9\" />\r\n          <line x1=\"15\" x2=\"15.01\" y1=\"9\" y2=\"9\" />\r\n        </motion.svg>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nScanFaceIcon.displayName = 'ScanFaceIcon';\r\n\r\nexport { ScanFaceIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}