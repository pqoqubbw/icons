{
  "name": "lock",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "lock.tsx",
      "content": "'use client';\n\nimport { motion, useAnimation } from 'motion/react';\nimport type { HTMLAttributes } from 'react';\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from 'react';\nimport { cn } from '@/lib/utils';\n\nexport interface LockIconHandle {\n  startAnimation: () => void;\n  stopAnimation: () => void;\n}\n\ninterface LockIconProps extends HTMLAttributes<HTMLDivElement> {\n  size?: number;\n}\n\nconst LockIcon = forwardRef<LockIconHandle, LockIconProps>(\n  ({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\n    const controls = useAnimation();\n    const isControlledRef = useRef(false);\n\n    useImperativeHandle(ref, () => {\n      isControlledRef.current = true;\n\n      return {\n        startAnimation: () => controls.start('animate'),\n        stopAnimation: () => controls.start('normal'),\n      };\n    });\n\n    const handleMouseEnter = useCallback(\n      (e: React.MouseEvent<HTMLDivElement>) => {\n        if (!isControlledRef.current) {\n          controls.start('animate');\n        } else {\n          onMouseEnter?.(e);\n        }\n      },\n      [controls, onMouseEnter]\n    );\n\n    const handleMouseLeave = useCallback(\n      (e: React.MouseEvent<HTMLDivElement>) => {\n        if (!isControlledRef.current) {\n          controls.start('normal');\n        } else {\n          onMouseLeave?.(e);\n        }\n      },\n      [controls, onMouseLeave]\n    );\n\n    return (\n      <div\n        className={cn(className)}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        {...props}\n      >\n        <motion.svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={size}\n          height={size}\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          initial=\"normal\"\n          variants={{\n            normal: {\n              rotate: 0,\n              scale: 1,\n            },\n            animate: {\n              rotate: [-3, 1, -2, 0],\n              scale: [0.95, 1.05, 0.98, 1],\n            },\n          }}\n          transition={{\n            duration: 1,\n            ease: [0.4, 0, 0.2, 1],\n          }}\n          animate={controls}\n        >\n          <rect width=\"18\" height=\"11\" x=\"3\" y=\"11\" rx=\"2\" ry=\"2\" />\n          <motion.path\n            d=\"M7 11V7a5 5 0 0 1 10 0v4\"\n            initial=\"normal\"\n            variants={{\n              normal: {\n                pathLength: 1,\n              },\n              animate: {\n                pathLength: 0.7,\n              },\n            }}\n            transition={{\n              duration: 0.3,\n              ease: [0.4, 0, 0.2, 1],\n            }}\n            animate={controls}\n          />\n        </motion.svg>\n      </div>\n    );\n  }\n);\n\nLockIcon.displayName = 'LockIcon';\n\nexport { LockIcon };\n",
      "type": "registry:ui"
    }
  ]
}