{
  "name": "bot",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "bot.tsx",
      "content": "'use client';\n\nimport { motion, useAnimation } from 'motion/react';\nimport type { HTMLAttributes } from 'react';\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from 'react';\nimport { cn } from '@/lib/utils';\n\nexport interface BotIconHandle {\n  startAnimation: () => void;\n  stopAnimation: () => void;\n}\n\ninterface BotIconProps extends HTMLAttributes<HTMLDivElement> {\n  size?: number;\n}\n\nconst BotIcon = forwardRef<BotIconHandle, BotIconProps>(\n  ({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\n    const controls = useAnimation();\n    const isControlledRef = useRef(false);\n\n    useImperativeHandle(ref, () => {\n      isControlledRef.current = true;\n\n      return {\n        startAnimation: () => controls.start('animate'),\n        stopAnimation: () => controls.start('normal'),\n      };\n    });\n\n    const handleMouseEnter = useCallback(\n      (e: React.MouseEvent<HTMLDivElement>) => {\n        if (!isControlledRef.current) {\n          controls.start('animate');\n        } else {\n          onMouseEnter?.(e);\n        }\n      },\n      [controls, onMouseEnter]\n    );\n\n    const handleMouseLeave = useCallback(\n      (e: React.MouseEvent<HTMLDivElement>) => {\n        if (!isControlledRef.current) {\n          controls.start('normal');\n        } else {\n          onMouseLeave?.(e);\n        }\n      },\n      [controls, onMouseLeave]\n    );\n\n    return (\n      <div\n        className={cn(className)}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        {...props}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={size}\n          height={size}\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        >\n          <path d=\"M12 8V4H8\" />\n          <rect width=\"16\" height=\"12\" x=\"4\" y=\"8\" rx=\"2\" />\n          <path d=\"M2 14h2\" />\n          <path d=\"M20 14h2\" />\n\n          <motion.line\n            x1={15}\n            x2={15}\n            initial=\"normal\"\n            animate={controls}\n            variants={{\n              normal: { y1: 13, y2: 15 },\n              animate: {\n                y1: [13, 14, 13], // open → closed → open\n                y2: [15, 14, 15],\n                transition: {\n                  duration: 0.5,\n                  ease: 'easeInOut',\n                  delay: 0.2,\n                },\n              },\n            }}\n          />\n\n          <motion.line\n            x1={9}\n            x2={9}\n            initial=\"normal\"\n            animate={controls}\n            variants={{\n              normal: { y1: 13, y2: 15 },\n              animate: {\n                y1: [13, 14, 13], // open → closed → open\n                y2: [15, 14, 15],\n                transition: {\n                  duration: 0.5,\n                  ease: 'easeInOut',\n                  delay: 0.2,\n                },\n              },\n            }}\n          />\n        </svg>\n      </div>\n    );\n  }\n);\n\nBotIcon.displayName = 'Bot';\n\nexport { BotIcon };\n",
      "type": "registry:ui"
    }
  ]
}