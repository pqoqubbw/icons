{
  "name": "refresh-cw-off",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "refresh-cw-off.tsx",
      "content": "'use client';\r\n\r\nimport { motion, useAnimation } from 'motion/react';\r\nimport type { HTMLAttributes } from 'react';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport interface RefreshCWOffIconHandle {\r\n  startAnimation: () => void;\r\n  stopAnimation: () => void;\r\n}\r\n\r\ninterface RefreshCWOffIconProps extends HTMLAttributes<HTMLDivElement> {\r\n  size?: number;\r\n}\r\n\r\nconst RefreshCWOffIcon = forwardRef<\r\n  RefreshCWOffIconHandle,\r\n  RefreshCWOffIconProps\r\n>(({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\r\n  const controls = useAnimation();\r\n  const isControlledRef = useRef(false);\r\n\r\n  useImperativeHandle(ref, () => {\r\n    isControlledRef.current = true;\r\n    return {\r\n      startAnimation: () => controls.start('animate'),\r\n      stopAnimation: () => controls.start('normal'),\r\n    };\r\n  });\r\n\r\n  const handleMouseEnter = useCallback(\r\n    (e: React.MouseEvent<HTMLDivElement>) => {\r\n      if (!isControlledRef.current) controls.start('animate');\r\n      else onMouseEnter?.(e);\r\n    },\r\n    [controls, onMouseEnter]\r\n  );\r\n\r\n  const handleMouseLeave = useCallback(\r\n    (e: React.MouseEvent<HTMLDivElement>) => {\r\n      if (!isControlledRef.current) controls.start('normal');\r\n      else onMouseLeave?.(e);\r\n    },\r\n    [controls, onMouseLeave]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={cn(className)}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      {...props}\r\n    >\r\n      <motion.svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width={size}\r\n        height={size}\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        transition={{ type: 'spring', stiffness: 500, damping: 20 }}\r\n        variants={{\r\n          normal: { x: 0 },\r\n          animate: {\r\n            x: [-3, 3, -3, 3, 0],\r\n            transition: { duration: 0.4 },\r\n          },\r\n        }}\r\n        animate={controls}\r\n      >\r\n        <path d=\"M21 8L18.74 5.74A9.75 9.75 0 0 0 12 3C11 3 10.03 3.16 9.13 3.47\" />\r\n        <path d=\"M8 16H3v5\" />\r\n        <path d=\"M3 12C3 9.51 4 7.26 5.64 5.64\" />\r\n        <path d=\"m3 16 2.26 2.26A9.75 9.75 0 0 0 12 21c2.49 0 4.74-1 6.36-2.64\" />\r\n        <path d=\"M21 12c0 1-.16 1.97-.47 2.87\" />\r\n        <path d=\"M21 3v5h-5\" />\r\n        <path d=\"M22 22 2 2\" />\r\n      </motion.svg>\r\n    </div>\r\n  );\r\n});\r\n\r\nRefreshCWOffIcon.displayName = 'RefreshCWOffIcon';\r\n\r\nexport { RefreshCWOffIcon };\r\n",
      "type": "registry:ui"
    }
  ]
}