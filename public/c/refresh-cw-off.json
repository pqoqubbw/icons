{
  "name": "refresh-cw-off",
  "type": "registry:ui",
  "registryDependencies": [],
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "refresh-cw-off.tsx",
      "content": "'use client';\n\nimport { motion, useAnimation } from 'motion/react';\nimport type { HTMLAttributes } from 'react';\nimport { forwardRef, useCallback, useImperativeHandle, useRef } from 'react';\nimport { cn } from '@/lib/utils';\n\nexport interface RefreshCWOffIconHandle {\n  startAnimation: () => void;\n  stopAnimation: () => void;\n}\n\ninterface RefreshCWOffIconProps extends HTMLAttributes<HTMLDivElement> {\n  size?: number;\n}\n\nconst RefreshCWOffIcon = forwardRef<\n  RefreshCWOffIconHandle,\n  RefreshCWOffIconProps\n>(({ onMouseEnter, onMouseLeave, className, size = 28, ...props }, ref) => {\n  const controls = useAnimation();\n  const isControlledRef = useRef(false);\n\n  useImperativeHandle(ref, () => {\n    isControlledRef.current = true;\n    return {\n      startAnimation: () => controls.start('animate'),\n      stopAnimation: () => controls.start('normal'),\n    };\n  });\n\n  const handleMouseEnter = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      if (!isControlledRef.current) controls.start('animate');\n      else onMouseEnter?.(e);\n    },\n    [controls, onMouseEnter]\n  );\n\n  const handleMouseLeave = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      if (!isControlledRef.current) controls.start('normal');\n      else onMouseLeave?.(e);\n    },\n    [controls, onMouseLeave]\n  );\n\n  return (\n    <div\n      className={cn(\n        'cursor-pointer select-none p-2 hover:bg-accent rounded-md transition-colors duration-200 flex items-center justify-center',\n        className\n      )}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      {...props}\n    >\n      <motion.svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        transition={{ type: 'spring', stiffness: 500, damping: 20 }}\n        variants={{\n          normal: { x: 0 },\n          animate: {\n            x: [-3, 3, -3, 3, 0],\n            transition: { duration: 0.4 },\n          },\n        }}\n        animate={controls}\n      >\n        <path d=\"M21 8L18.74 5.74A9.75 9.75 0 0 0 12 3C11 3 10.03 3.16 9.13 3.47\" />\n        <path d=\"M8 16H3v5\" />\n        <path d=\"M3 12C3 9.51 4 7.26 5.64 5.64\" />\n        <path d=\"m3 16 2.26 2.26A9.75 9.75 0 0 0 12 21c2.49 0 4.74-1 6.36-2.64\" />\n        <path d=\"M21 12c0 1-.16 1.97-.47 2.87\" />\n        <path d=\"M21 3v5h-5\" />\n        <path d=\"M22 22 2 2\" />\n      </motion.svg>\n    </div>\n  );\n});\n\nRefreshCWOffIcon.displayName = 'RefreshCWOffIcon';\n\nexport { RefreshCWOffIcon };\n",
      "type": "registry:ui"
    }
  ]
}